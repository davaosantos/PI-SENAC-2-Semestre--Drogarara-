/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.senac.drogarara.gui;

import com.senac.drogarara.conexao.Conexao;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author david
 */
public class SelecionarClienteView extends javax.swing.JFrame {

    /**
     * Creates new form SelecionarClienteView
     */
    
    private GerarVendaView gerarVendaView;
    
    public SelecionarClienteView(GerarVendaView gerarVendaView) {
        this.gerarVendaView = gerarVendaView;
        initComponents();
    }

    private SelecionarClienteView() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnConsNmCliente = new javax.swing.JButton();
        txtConsNmCliente = new javax.swing.JTextField();
        txtConsCpfCliente = new javax.swing.JTextField();
        btnConsClienteCPF = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tListaClienteSelecionado = new javax.swing.JTable();
        btnAddCliente = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnVoltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setText("Nome do Cliente:");

        jLabel3.setText("CPF:");

        btnConsNmCliente.setIcon(new javax.swing.ImageIcon("/home/david/Vídeos/searchBtnSmall.png")); // NOI18N
        btnConsNmCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsNmClienteActionPerformed(evt);
            }
        });

        btnConsClienteCPF.setIcon(new javax.swing.ImageIcon("/home/david/Vídeos/searchBtnSmall.png")); // NOI18N
        btnConsClienteCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsClienteCPFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtConsNmCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 480, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtConsCpfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 112, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnConsClienteCPF, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                    .addComponent(btnConsNmCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(22, 22, 22))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(btnConsNmCliente)
                    .addComponent(txtConsNmCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtConsCpfCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnConsClienteCPF))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tListaClienteSelecionado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tListaClienteSelecionado);

        btnAddCliente.setIcon(new javax.swing.ImageIcon("/home/david/Imagens/resize/verificaIcon.png")); // NOI18N
        btnAddCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(82, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAddCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 624, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(65, 65, 65))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnAddCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jLabel1.setFont(new java.awt.Font("Liberation Sans", 1, 18)); // NOI18N
        jLabel1.setText("Selecione o Cliente");

        btnVoltar.setIcon(new javax.swing.ImageIcon("/home/david/Vídeos/btnReturnSmall.png")); // NOI18N
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(128, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(99, 99, 99))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(432, 432, 432))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(135, 135, 135))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(34, 34, 34)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(btnVoltar)
                .addGap(15, 15, 15))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
       
    
    private void btnConsClienteCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsClienteCPFActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        try {

            long cpf = Long.parseLong(txtConsCpfCliente.getText());

        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "No campo CPF , devem ser inseridos somente numeros");
        }

        //ESTRUTURA COM O BANCO
        try (Connection con = Conexao.getConexao(); PreparedStatement stm = con.prepareStatement("SELECT id_cliente, nome, cpf, endereco, telefone, email FROM Cliente WHERE cpf = ?")) {
            stm.setLong(1, Long.parseLong(txtConsCpfCliente.getText()));

            // Executar a consulta SQL e obter os resultados
            ResultSet rs = stm.executeQuery();

            // Criar um objeto DefaultTableModel para armazenar os dados do JTable
            DefaultTableModel model = new DefaultTableModel(new Object[]{"ID", "Nome", "CPF", "Endereço", "Telefone", "Email"}, 0);

            // Preencher o modelo com os dados da consulta
            while (rs.next()) {
                int id = rs.getInt("id_cliente");
                String nome = rs.getString("nome");
                long cpf = rs.getLong("cpf");
                String endereco = rs.getString("endereco");
                String telefone = rs.getString("telefone");
                String email = rs.getString("email");

                Object[] row = new Object[]{id, nome, cpf, endereco, telefone, email};
                model.addRow(row);
            }

            // Fechar os objetos ResultSet, PreparedStatement e Connection
            rs.close();
            stm.close();
            con.close();

            // Preencher o JTable com o modelo criado
            tListaClienteSelecionado.setModel(model);

        } catch (SQLException ex) {
            Logger.getLogger(LoginFrame.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Erro ao conectar ao banco de dados!");
        }
    }//GEN-LAST:event_btnConsClienteCPFActionPerformed

    private void btnConsNmClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsNmClienteActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        // TODO add your handling code here:
//        try {
//
//            long cpf = Long.parseLong(txtConsCpfCliente.getText());
//
//        } catch (NumberFormatException ex) {
//            JOptionPane.showMessageDialog(this, "No campo CPF , devem ser inseridos somente numeros");
//        }

        boolean erro = false;

        if (!txtConsNmCliente.getText().isEmpty()) {
            String nomeCliente = txtConsNmCliente.getText();
        } else {
            erro = true;
            JOptionPane.showMessageDialog(this, "O nome do cliente está em branco", "Title", JOptionPane.ERROR_MESSAGE);
        }

        if (erro = false) {
            //ESTRUTURA COM O BANCO
            try (Connection con = Conexao.getConexao(); PreparedStatement stm = con.prepareStatement("SELECT id_cliente, nome, cpf, endereco, telefone, email FROM Cliente WHERE nome LIKE ?")) {
                stm.setString(1, txtConsNmCliente.getText());

                // Executar a consulta SQL e obter os resultados
                ResultSet rs = stm.executeQuery();

                // Criar um objeto DefaultTableModel para armazenar os dados do JTable
                DefaultTableModel model = new DefaultTableModel(new Object[]{"ID", "Nome", "CPF", "Endereço", "Telefone", "Email"}, 0);

                // Preencher o modelo com os dados da consulta
                while (rs.next()) {
                    int id = rs.getInt("id_cliente");
                    String nome = rs.getString("nome");
                    long cpf = rs.getLong("cpf");
                    String endereco = rs.getString("endereco");
                    String telefone = rs.getString("telefone");
                    String email = rs.getString("email");

                    Object[] row = new Object[]{id, nome, cpf, endereco, telefone, email};
                    model.addRow(row);
                }

                // Fechar os objetos ResultSet, PreparedStatement e Connection
                rs.close();
                stm.close();
                con.close();

                // Preencher o JTable com o modelo criado
                tListaClienteSelecionado.setModel(model);

            } catch (SQLException ex) {
                Logger.getLogger(LoginFrame.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Erro ao conectar ao banco de dados!");
            }
        }


    }//GEN-LAST:event_btnConsNmClienteActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnAddClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddClienteActionPerformed
        // TODO add your handling code here:
        int linhaSelecionada = tListaClienteSelecionado.getSelectedRow();
        if (linhaSelecionada != -1) {
            // Obtém o ID do cliente selecionado na tabela
            Integer idCliente = (Integer) tListaClienteSelecionado.getValueAt(linhaSelecionada, 0);
            String nmCliente = (String) tListaClienteSelecionado.getValueAt(linhaSelecionada, 1);
          
            // Passa o nome do cliente selecionado para a tela de gerar venda
            gerarVendaView.setTxtIdCliente(idCliente);
            gerarVendaView.setTxtNmCliente(nmCliente);

            // Fecha a tela de seleção de cliente
            dispose();
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, selecione um cliente na tabela");
        }  
    }//GEN-LAST:event_btnAddClienteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SelecionarClienteView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SelecionarClienteView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SelecionarClienteView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SelecionarClienteView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SelecionarClienteView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCliente;
    private javax.swing.JButton btnConsClienteCPF;
    private javax.swing.JButton btnConsNmCliente;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tListaClienteSelecionado;
    private javax.swing.JTextField txtConsCpfCliente;
    private javax.swing.JTextField txtConsNmCliente;
    // End of variables declaration//GEN-END:variables
}
